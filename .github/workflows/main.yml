name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: npm ci
      - name: Run Jest tests
        run: npm run test
      - name: Run ESLint
        run: npm run lint


  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    steps:
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
      - name: Deploy to AWS
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name user-api-deployer \
            --deployment-group-name Gateway-api-deployment-group \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
  - name: Wait until deployment is "Ready"
      run: |
        # Try every 15 seconds
        maxRetries=40
        retryInterval=15
        echo "Waiting for the deployment to be ready for testing"
        retry=0
        until [ ${retry} -ge ${maxRetries} ]
        do
            status=`aws deploy get-deployment --deployment-id ${{ steps.ecs-deployment.outputs.codedeploy-deployment-id }} --region eu-north-1 | jq '.deploymentInfo.status'`
            echo "::debug::The deployment is currently in the status $status"
            retry=$[${retry}+1]
            echo "::debug::Retrying [${retry}/${maxRetries}] in ${retryInterval}(s) "
            sleep ${retryInterval}
        done

        if [ ${retry} -ge ${maxRetries} ]; then
            echo "::warning::Deployment Ready Check Timed Out after ${maxRetries} attempts"
        fi





